/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> a,b;
    vector<int> fun1(TreeNode* node){
        if(node==NULL) return  {0};
        if(node->left==NULL && node->right==NULL){
             a.push_back(node->val);
            // return {0};
        }
        fun1(node->left);
        fun1(node->right);
        return a;
    }
    vector<int> fun2(TreeNode* node){
        if(node==NULL) return  {0};
        if(node->left==NULL && node->right==NULL){
             b.push_back(node->val);
             //return {0};
        }
        fun2(node->left);
        fun2(node->right);
        return b;
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> v1,v2;
        v1=fun1(root1);
        v2=fun2(root2);
        if(v1==v2) return true;
        return false;
    }
};
